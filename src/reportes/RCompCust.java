/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package reportes;

import config.Conexion;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;

/**
 *
 * @author luisi
 */
public class RCompCust extends javax.swing.JDialog {

     DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM");
     LocalDate localDate = LocalDate.now();
     String dateFor = localDate.format(formatter);
    
    /**
     * Creates new form NewJDialog
     */
    public RCompCust(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/Recursos/gastroServerIcon.png")).getImage());
        jForDateofmeal.setText(dateFor.toString());
        generarCustomers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jForDateofmeal = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        cBoxEmp = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(58, 58, 145));

        jLabel1.setFont(new java.awt.Font("Calling Heart", 0, 52)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reporte Ventas-Cliente ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fecha:");

        jForDateofmeal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM"))));
        jForDateofmeal.setToolTipText("AÃ±o-Mes-Dia");
        jForDateofmeal.setNextFocusableComponent(jButton1);
        jForDateofmeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jForDateofmealActionPerformed(evt);
            }
        });
        jForDateofmeal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jForDateofmealKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jForDateofmealKeyReleased(evt);
            }
        });

        jButton1.setText("Generar Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cBoxEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos_los_clientes" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cliente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jForDateofmeal)
                            .addComponent(cBoxEmp, 0, 200, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jForDateofmeal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jForDateofmealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jForDateofmealActionPerformed
        // TODO add your handling code here:
        // Verificamos si la tecla presionada es "Enter"
    }//GEN-LAST:event_jForDateofmealActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        generarRCustomers();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jForDateofmealKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jForDateofmealKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jForDateofmealKeyPressed

    private void jForDateofmealKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jForDateofmealKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jForDateofmealKeyReleased

    public void generarRCustomers() {
    try {
        Conexion cn = new Conexion();
        Connection con;
        Statement st;
        ResultSet rs;
        
        String idNomCust = cBoxEmp.getSelectedItem().toString();
        String[] idCust = idNomCust.split("-");
        
        String sqlDatetime = jForDateofmeal.getText();
        String anoMesDia[] = sqlDatetime.split("-");
        String archivo = "RVentasCliente-" + sqlDatetime + "-" + idNomCust + ".html";

        FileWriter arch = new FileWriter(archivo);
        arch.write("<!DOCTYPE html>");
        arch.write("<html lang=\"en\">");
        arch.write("<head>");
        arch.write("<meta charset=\"UTF-8\">");
        arch.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
        arch.write("<title>Reporte de Compras</title>");
        arch.write("<style>");
        arch.write("body {font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #DEF7F4;}");
        arch.write(".container {max-width: 800px; margin: 20px auto; padding: 20px; background-color: #fafbfb; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);}");
        arch.write("h1 {text-align: center; color: #333;}");
        arch.write("table {width: 100%; border-collapse: collapse; margin-bottom: 20px;}");
        arch.write("th, td {padding: 8px; text-align: left; border-bottom: 1px solid #ddd;}");
        arch.write("th {background-color: #f2f2f2;}");
        arch.write(".total {margin-top: 20px; text-align: right; font-weight: bold;}");
        arch.write("</style>");
        arch.write("</head>");
        arch.write("<body>");
        arch.write("<div class=\"container\">");
        arch.write("<h1>REPORTE DE COMPRA</h1>");
        arch.write("<p>REPORTE DEL MES: " + sqlDatetime + "</p>");
        arch.write("<table>");
        arch.write("<thead>");
        arch.write("<tr>");
        arch.write("<th>customers_id</th>");
        arch.write("<th>customers_name</th>");
        arch.write("<th>date_of_meal</th>");
        arch.write("<th>cost_of_meal</th>");
        arch.write("</tr>");
        arch.write("</thead>");
        arch.write("<tbody>");
        
        if(cBoxEmp.getSelectedIndex() == 0){
            String sql = "SELECT customers.id, customers.name, sales.date_of_meal, sales.amount FROM customers JOIN sales ON customers.id = sales.id_customer WHERE EXTRACT(MONTH FROM date_of_meal)=" + Integer.parseInt(anoMesDia[1]) + " AND EXTRACT(YEAR FROM date_of_meal)=" + Integer.parseInt(anoMesDia[0]) +" ORDER BY customers.id;";
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
        }else{
            String sql = "SELECT customers.id, customers.name, sales.date_of_meal, sales.amount FROM customers JOIN sales ON customers.id = sales.id_customer WHERE customers.id="+ idCust[0] +" AND EXTRACT(MONTH FROM date_of_meal)=" + Integer.parseInt(anoMesDia[1]) + " AND EXTRACT(YEAR FROM date_of_meal)=" + Integer.parseInt(anoMesDia[0]) +"  ORDER BY customers.id;";
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
        }

        int cont = 0;
        double sum = 0;
        while (rs.next()) {
            arch.write("<tr>");
            arch.write("<td>" + rs.getString(1) + "</td>");
            arch.write("<td>" + rs.getString(2) + "</td>");
            arch.write("<td>" + rs.getString(3) + "</td>");
            arch.write("<td>$" + rs.getString(4) + "</td>");
            arch.write("</tr>");
            cont++;
            sum += Double.parseDouble(rs.getString(4));
        }

        arch.write("</tbody>");
        arch.write("</table>");
        arch.write("<p class=\"total\">TOTAL DE INGRESOS: $" + sum + "</p>");
        arch.write("<p class=\"total\">TOTAL DE COMPRAS REALIZADAS: " + cont + "</p>");
        arch.write("</div>");
        arch.write("</body>");
        arch.write("</html>");
        arch.close();

        // Abre el archivo con el navegador predeterminado
        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + archivo);

    } catch (Exception e) {
        System.out.println(e.getMessage());
    }
}
    
    public void generarCustomers(){
        //
        try{
            Conexion cn = new Conexion();
            Connection con;
            Statement st;
            ResultSet rs;

            String sql = "SELECT id, name FROM customers ORDER BY id;";
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);

            while (rs.next()) {
                cBoxEmp.addItem(rs.getString(1) + "-" + rs.getString(2) );
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RCompCust.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RCompCust.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RCompCust.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RCompCust.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RCompCust dialog = new RCompCust(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cBoxEmp;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jForDateofmeal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
